{{- if .Values.mysql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecommerce-app.fullname" . }}-mysql
  labels:
    {{- include "ecommerce-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ecommerce-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "ecommerce-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      securityContext:
        {{- toYaml .Values.securityContext.pod | nindent 8 }}
      containers:
      - name: mysql
        image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
        imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "ecommerce-app.fullname" . }}-mysql-credentials
              key: DB_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ include "ecommerce-app.fullname" . }}-mysql-credentials
              key: DB_NAME
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "ecommerce-app.fullname" . }}-mysql-credentials
              key: DB_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "ecommerce-app.fullname" . }}-mysql-credentials
              key: DB_PASSWORD
        ports:
        - containerPort: {{ .Values.mysql.service.port }}
          name: mysql
        volumeMounts:
        {{- if .Values.mysql.persistence.enabled }}
        - name: mysql-storage
          mountPath: /var/lib/mysql
        {{- end }}
        - name: mysql-init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          {{- toYaml .Values.mysql.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext.container | nindent 10 }}
      volumes:
      {{- if .Values.mysql.persistence.enabled }}
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: {{ include "ecommerce-app.fullname" . }}-mysql-pvc
      {{- end }}
      - name: mysql-init-script
        configMap:
          name: {{ include "ecommerce-app.fullname" . }}-mysql-init-script
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
